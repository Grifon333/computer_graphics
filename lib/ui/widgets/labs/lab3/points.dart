abstract class Points {
  static List<List<List<double>>> wheels() {
    const List<List<double>> centers = [
      [-19, -7, 16],
      [17, -7, 16],
      [-19, -7, -16],
      [17, -7, -16],
      [-19, -7, 12],
      [17, -7, 12],
      [-19, -7, -12],
      [17, -7, -12],
    ];
    const List<List<List<double>>> sides = [
      [
        [-23, -6],
        [-22, -4],
        [-20, -3],
        [-18, -3],
        [-16, -4],
        [-15, -6],
        [-15, -8],
        [-16, -10],
        [-18, -11],
        [-20, -11],
        [-22, -10],
        [-23, -8],
      ],
      [
        [13, -6],
        [14, -4],
        [16, -3],
        [18, -3],
        [20, -4],
        [21, -6],
        [21, -8],
        [20, -10],
        [18, -11],
        [16, -11],
        [14, -10],
        [13, -8],
      ]
    ];
    List<List<List<double>>> result = [];
    for (int k = 0; k < centers.length; k++) {
      for (int i = 0; i < sides[k % 2].length - 1; i++) {
        result.add([
          [sides[k % 2][i][0], sides[k % 2][i][1], centers[k][2]],
          [sides[k % 2][i + 1][0], sides[k % 2][i + 1][1], centers[k][2]],
          centers[k]
        ]);
      }
      result.add([
        [sides[k % 2].first[0], sides[k % 2].first[1], centers[k][2]],
        [sides[k % 2].last[0], sides[k % 2].last[1], centers[k][2]],
        centers[k]
      ]);
    }

    for (int k = 0; k < centers.length / 2; k++) {
      for (int i = 0; i < sides[k % 2].length - 1; i++) {
        result.add([
          [sides[k % 2][i][0], sides[k % 2][i][1], centers[k][2]],
          [sides[k % 2][i][0], sides[k % 2][i][1], centers[k + 4][2]],
          [sides[k % 2][i + 1][0], sides[k % 2][i + 1][1], centers[k + 4][2]],
        ]);
        result.add([
          [sides[k % 2][i][0], sides[k % 2][i][1], centers[k][2]],
          [sides[k % 2][i + 1][0], sides[k % 2][i + 1][1], centers[k + 4][2]],
          [sides[k % 2][i + 1][0], sides[k % 2][i + 1][1], centers[k][2]],
        ]);
      }
    }

    return result;
  }

  static List<List<List<double>>> body() {
    const List<double> width = [16, -16];
    List<List<List<double>>> points = [
      [
        [-25, -9],
        [-25, -10],
        [-26, -9]
      ],
      [
        [-23, -6],
        [-23, -10],
        [-25, -10]
      ],
      [
        [-25, -6],
        [-23, -6],
        [-25, -10]
      ],
      [
        [-26, -5],
        [-23, -6],
        [-25, -6]
      ],
      [
        [-26, -3],
        [-23, -6],
        [-26, -5],
      ],
      [
        [-26, -3],
        [-22, -4],
        [-23, -6]
      ],
      [
        [-26, -3],
        [-22, -4],
        [-24, -1]
      ],
      [
        [-22, -4],
        [-24, -1],
        [-22, 0]
      ],
      [
        [-22, -4],
        [-22, 0],
        [-20, -3]
      ],
      [
        [-22, 0],
        [-20, -3],
        [-19, 0]
      ],
      [
        [-20, -3],
        [-19, 0],
        [-18, -3]
      ],
      [
        [-19, 0],
        [-18, -3],
        [-16, 0],
      ],
      [
        [-18, -3],
        [-16, 0],
        [-16, -4]
      ],
      [
        [-16, 0],
        [-16, -4],
        [-13, 0]
      ],
      [
        [-16, -4],
        [-13, 0],
        [-15, -6]
      ],
      [
        [-13, 0],
        [-15, -6],
        [3, 0]
      ],
      [
        [-15, -6],
        [3, 0],
        [13, -10]
      ],
      [
        [13, -10],
        [-15, -6],
        [-15, -10]
      ],
      [
        [13, -10],
        [3, 0],
        [13, -6]
      ],
      [
        [3, 0],
        [13, -6],
        [14, -4]
      ],
      [
        [3, 0],
        [14, -4],
        [16, -3]
      ],
      [
        [3, 0],
        [16, -3],
        [16, 2]
      ],
      [
        [16, -3],
        [16, 2],
        [18, -3]
      ],
      [
        [16, 2],
        [18, -3],
        [25, 2]
      ],
      [
        [18, -3],
        [25, 2],
        [25, -2]
      ],
      [
        [18, -3],
        [25, -2],
        [20, -4]
      ],
      [
        [25, -2],
        [20, -4],
        [26, -4]
      ],
      [
        [20, -4],
        [26, -4],
        [21, -6]
      ],
      [
        [26, -4],
        [21, -6],
        [26, -8]
      ],
      [
        [21, -6],
        [26, -8],
        [23, -10]
      ],
      [
        [21, -6],
        [23, -10],
        [21, -10]
      ],
    ];

    for (int i = 0; i < points.length; i++) {
      for (int j = 0; j < points[i].length; j++) {
        points[i][j].add(width[0]);
      }
    }

    List<List<List<double>>> result = List.generate(
      points.length * 2,
      (index) => List.generate(3, (_) => List.filled(3, 0)),
    );
    for (int i = 0; i < points.length; i++) {
      for (int j = 0; j < points[i].length; j++) {
        result[i][j][0] = points[i][j][0];
        result[i][j][1] = points[i][j][1];
        result[i][j][2] = width[0];

        result[i + points.length][j][0] = points[i][j][0];
        result[i + points.length][j][1] = points[i][j][1];
        result[i + points.length][j][2] = width[1];
      }
    }

    result.addAll([
      [
        [-16, 0, 16],
        [-16, 2, 13],
        [8, 2, 13]
      ],
      [
        [-16, 0, 16],
        [8, 2, 13],
        [8, 0, 16]
      ],
      [
        [8, 0, 16],
        [8, 2, 13],
        [16, 2, 16]
      ],
      [
        [8, 2, 13],
        [16, 2, 16],
        [15, 4, 13]
      ],
      [
        [-16, 2, 13],
        [-11, 2, 13],
        [-13, 3, 12.6]
      ],
      [
        [-11, 2, 13],
        [-13, 3, 12.6],
        [-11, 4, 12.3]
      ],
      [
        [-11, 2, 13],
        [-11, 4, 12.3],
        [-9, 4, 12.3]
      ],
      [
        [-11, 4, 12.3],
        [-9, 4, 12.3],
        [-5, 8, 11]
      ],
      [
        [-9, 4, 12.3],
        [-5, 8, 11],
        [-4, 7, 11]
      ],
      [
        [-5, 8, 11],
        [-4, 7, 11],
        [-3, 9, 10.5]
      ],
      [
        [-4, 7, 11],
        [-3, 9, 10.5],
        [-2, 8, 11]
      ],
      [
        [-3, 9, 10.5],
        [-2, 8, 11],
        [1, 10, 10]
      ],
      [
        [-2, 8, 11],
        [1, 10, 10],
        [1, 9, 10.5]
      ],
      [
        [1, 10, 10],
        [1, 9, 10.5],
        [8, 10, 10]
      ],
      [
        [1, 9, 10.5],
        [8, 10, 10],
        [8, 9, 10.5]
      ],
      [
        [8, 10, 10],
        [8, 9, 10.5],
        [12, 9, 10.5]
      ],
      [
        [8, 9, 10.5],
        [12, 9, 10.5],
        [14, 7, 11.3]
      ],
      [
        [12, 9, 10.5],
        [14, 7, 11.3],
        [15, 8, 11]
      ],
      [
        [14, 7, 11.3],
        [15, 8, 11],
        [17, 5, 12]
      ],
      [
        [15, 8, 11],
        [17, 5, 12],
        [21, 6, 11.6]
      ],
      [
        [17, 5, 12],
        [21, 6, 11.6],
        [23, 5, 12]
      ],
      [
        [17, 5, 12],
        [23, 5, 12],
        [25, 2, 16]
      ],
      [
        [23, 5, 12],
        [25, 4, 12.3],
        [25, 2, 16]
      ],
      [
        [17, 5, 12],
        [25, 2, 16],
        [16, 2, 16]
      ],
      [
        [16, 2, 16],
        [15, 4, 13],
        [17, 5, 12]
      ],
      [
        [4, 9, 10.5],
        [5, 9, 10, 5],
        [4, 5, 12]
      ],
      [
        [4, 9, 10.5],
        [4, 5, 12],
        [3, 5, 12]
      ],
      [
        [4, 5, 12],
        [3, 5, 12],
        [3, 2, 13]
      ],
      [
        [3, 5, 12],
        [3, 2, 13],
        [2, 2, 13]
      ],
      //--------------------
      [
        [-16, 0, -16],
        [-16, 2, -13],
        [8, 2, -13]
      ],
      [
        [-16, 0, -16],
        [8, 2, -13],
        [8, 0, -16]
      ],
      [
        [8, 0, -16],
        [8, 2, -13],
        [16, 2, -16]
      ],
      [
        [8, 2, -13],
        [16, 2, -16],
        [15, 4, -13]
      ],
      [
        [-16, 2, -13],
        [-11, 2, -13],
        [-13, 3, -12.6]
      ],
      [
        [-11, 2, -13],
        [-13, 3, -12.6],
        [-11, 4, -12.3]
      ],
      [
        [-11, 2, -13],
        [-11, 4, -12.3],
        [-9, 4, -12.3]
      ],
      [
        [-11, 4, -12.3],
        [-9, 4, -12.3],
        [-5, 8, -11]
      ],
      [
        [-9, 4, -12.3],
        [-5, 8, -11],
        [-4, 7, -11]
      ],
      [
        [-5, 8, -11],
        [-4, 7, -11],
        [-3, 9, -10.5]
      ],
      [
        [-4, 7, -11],
        [-3, 9, -10.5],
        [-2, 8, -11]
      ],
      [
        [-3, 9, -10.5],
        [-2, 8, -11],
        [1, 10, -10]
      ],
      [
        [-2, 8, -11],
        [1, 10, -10],
        [1, 9, -10.5]
      ],
      [
        [1, 10, -10],
        [1, 9, -10.5],
        [8, 10, -10]
      ],
      [
        [1, 9, -10.5],
        [8, 10, -10],
        [8, 9, -10.5]
      ],
      [
        [8, 10, -10],
        [8, 9, -10.5],
        [12, 9, -10.5]
      ],
      [
        [8, 9, -10.5],
        [12, 9, -10.5],
        [14, 7, -11.3]
      ],
      [
        [12, 9, -10.5],
        [14, 7, -11.3],
        [15, 8, -11]
      ],
      [
        [14, 7, -11.3],
        [15, 8, -11],
        [17, 5, -12]
      ],
      [
        [15, 8, -11],
        [17, 5, -12],
        [21, 6, -11.6]
      ],
      [
        [17, 5, -12],
        [21, 6, -11.6],
        [23, 5, -12]
      ],
      [
        [17, 5, -12],
        [23, 5, -12],
        [25, 2, -16]
      ],
      [
        [23, 5, -12],
        [25, 4, -12.3],
        [25, 2, -16]
      ],
      [
        [17, 5, -12],
        [25, 2, -16],
        [16, 2, -16]
      ],
      [
        [16, 2, -16],
        [15, 4, -13],
        [17, 5, -12]
      ],
      [
        [4, 9, -10.5],
        [5, 9, -10, 5],
        [4, 5, -12]
      ],
      [
        [4, 9, -10.5],
        [4, 5, -12],
        [3, 5, -12]
      ],
      [
        [4, 5, -12],
        [3, 5, -12],
        [3, 2, -13]
      ],
      [
        [3, 5, -12],
        [3, 2, -13],
        [2, 2, -13]
      ],
    ]);

    return result;
  }

  static const List<List<List<double>>> front = [
    [
      [-26, -3, 16],
      [-26, -5, 16],
      [-27, -5, 15]
    ],
    [
      [-26, -3, 16],
      [-27, -5, 15],
      [-27, -3, 15]
    ],
    [
      [-27, -5, 15],
      [-27, -3, 15],
      [-28, -5, 12]
    ],
    [
      [-27, -3, 15],
      [-28, -5, 12],
      [-28, -3, 12]
    ],
    [
      [-28, -5, 12],
      [-28, -3, 12],
      [-29, -5, 8]
    ],
    [
      [-28, -3, 12],
      [-29, -5, 8],
      [-29, -3, 8]
    ],
    [
      [-26, -5, 16],
      [-25, -6, 16],
      [-26, -6, 15]
    ],
    [
      [-26, -5, 16],
      [-27, -5, 15],
      [-26, -6, 15]
    ],
    [
      [-27, -5, 15],
      [-26, -6, 15],
      [-27, -6, 12]
    ],
    [
      [-27, -5, 15],
      [-27, -6, 12],
      [-28, -5, 12]
    ],
    [
      [-28, -5, 12],
      [-27, -6, 12],
      [-28, -6, 8],
    ],
    [
      [-28, -5, 12],
      [-28, -6, 8],
      [-29, -5, 8]
    ],
    [
      [-26, -9, 16],
      [-25, -10, 16],
      [-26, -10, 15]
    ],
    [
      [-26, -9, 16],
      [-26, -10, 15],
      [-27, -9, 15]
    ],
    [
      [-27, -9, 15],
      [-26, -10, 15],
      [-27, -10, 12]
    ],
    [
      [-27, -9, 15],
      [-27, -10, 12],
      [-28, -9, 12]
    ],
    [
      [-28, -9, 12],
      [-27, -10, 12],
      [-28, -10, 8]
    ],
    [
      [-28, -9, 12],
      [-28, -10, 8],
      [-29, -9, 8]
    ],
    [
      [-29, -3, 9],
      [-29, -3, 8],
      [-28, -2, 8]
    ],
    [
      [-28, -2, 8],
      [-27, -1, 10],
      [-26, -1, 12]
    ],
    [
      [-27, -1, 10],
      [-26, -1, 12],
      [-24, 1, 13]
    ],
    [
      [-26, -1, 12],
      [-25, -1, 15],
      [-24, 1, 13]
    ],
    [
      [-24, 1, 13],
      [-25, -1, 15],
      [-24, -1, 16]
    ],
    [
      [-24, 1, 13],
      [-24, -1, 16],
      [-22, 0, 16]
    ],
    [
      [-24, 1, 13],
      [-22, 0, 16],
      [-20, 2, 13]
    ],
    [
      [-20, 2, 13],
      [-22, 0, 16],
      [-16, 0, 16]
    ],
    [
      [-20, 2, 13],
      [-16, 2, 13],
      [-16, 0, 16]
    ],
    //-----------------------
    [
      [-26, -3, -16],
      [-26, -5, -16],
      [-27, -5, -15]
    ],
    [
      [-26, -3, -16],
      [-27, -5, -15],
      [-27, -3, -15]
    ],
    [
      [-27, -5, -15],
      [-27, -3, -15],
      [-28, -5, -12]
    ],
    [
      [-27, -3, -15],
      [-28, -5, -12],
      [-28, -3, -12]
    ],
    [
      [-28, -5, -12],
      [-28, -3, -12],
      [-29, -5, -8]
    ],
    [
      [-28, -3, -12],
      [-29, -5, -8],
      [-29, -3, -8]
    ],
    [
      [-26, -5, -16],
      [-25, -6, -16],
      [-26, -6, -15]
    ],
    [
      [-26, -5, -16],
      [-27, -5, -15],
      [-26, -6, -15]
    ],
    [
      [-27, -5, -15],
      [-26, -6, -15],
      [-27, -6, -12]
    ],
    [
      [-27, -5, -15],
      [-27, -6, -12],
      [-28, -5, -12]
    ],
    [
      [-28, -5, -12],
      [-27, -6, -12],
      [-28, -6, -8],
    ],
    [
      [-28, -5, -12],
      [-28, -6, -8],
      [-29, -5, -8]
    ],
    [
      [-26, -9, -16],
      [-25, -10, -16],
      [-26, -10, -15]
    ],
    [
      [-26, -9, -16],
      [-26, -10, -15],
      [-27, -9, -15]
    ],
    [
      [-27, -9, -15],
      [-26, -10, -15],
      [-27, -10, -12]
    ],
    [
      [-27, -9, -15],
      [-27, -10, -12],
      [-28, -9, -12]
    ],
    [
      [-28, -9, -12],
      [-27, -10, -12],
      [-28, -10, -8]
    ],
    [
      [-28, -9, -12],
      [-28, -10, -8],
      [-29, -9, -8]
    ],
    [
      [-29, -3, -9],
      [-29, -3, -8],
      [-28, -2, -8]
    ],
    [
      [-28, -2, -8],
      [-27, -1, -10],
      [-26, -1, -12]
    ],
    [
      [-27, -1, -10],
      [-26, -1, -12],
      [-24, 1, -13]
    ],
    [
      [-26, -1, -12],
      [-25, -1, -15],
      [-24, 1, -13]
    ],
    [
      [-24, 1, -13],
      [-25, -1, -15],
      [-24, -1, -16]
    ],
    [
      [-24, 1, -13],
      [-24, -1, -16],
      [-22, 0, -16]
    ],
    [
      [-24, 1, -13],
      [-22, 0, -16],
      [-20, 2, -13]
    ],
    [
      [-20, 2, -13],
      [-22, 0, -16],
      [-16, 0, -16]
    ],
    [
      [-20, 2, -13],
      [-16, 2, -13],
      [-16, 0, -16]
    ],
    //----------------------------
    [
      [-28, -2, 8],
      [-29, -3, 8],
      [-29, -3, -8]
    ],
    [
      [-28, -2, 8],
      [-29, -3, -8],
      [-28, -2, -8]
    ],
    [
      [-29, -3, 8],
      [-29, -5, 8],
      [-29, -5, -8]
    ],
    [
      [-29, -3, 8],
      [-29, -5, -8],
      [-29, -3, -8]
    ],
    [
      [-29, -5, 8],
      [-28, -6, 8],
      [-28, -6, -8]
    ],
    [
      [-29, -5, 8],
      [-28, -6, -8],
      [-29, -5, -8]
    ],
    [
      [-28, -6, 8],
      [-28, -7, 7],
      [-28, -7, -7]
    ],
    [
      [-28, -6, 8],
      [-28, -7, -7],
      [-28, -6, -8]
    ],
    [
      [-29, -9, 8],
      [-28, -10, 8],
      [-28, -10, -8]
    ],
    [
      [-29, -9, 8],
      [-28, -10, -8],
      [-29, -9, -8]
    ]
  ];

  static const List<List<List<double>>> frontBumper = [
    [
      [-25, -6, 16],
      [-25, -9, 16],
      [-26, -9, 15]
    ],
    [
      [-25, -6, 16],
      [-26, -9, 15],
      [-26, -6, 15]
    ],
    [
      [-26, -6, 15],
      [-26, -9, 15],
      [-27, -9, 12]
    ],
    [
      [-26, -6, 15],
      [-27, -9, 12],
      [-27, -6, 12]
    ],
    [
      [-27, -6, 12],
      [-27, -9, 12],
      [-28, -9, 8]
    ],
    [
      [-27, -6, 12],
      [-28, -9, 8],
      [-28, -6, 8]
    ],
    [
      [-28, -6, 8],
      [-28, -7, 8],
      [-28, -7, 7]
    ],
    //---
    [
      [-25, -9, 16],
      [-26, -9, 16],
      [-27, -9, 15]
    ],
    [
      [-25, -9, 16],
      [-27, -9, 15],
      [-26, -9, 15]
    ],
    [
      [-26, -9, 15],
      [-27, -9, 15],
      [-28, -9, 12]
    ],
    [
      [-26, -9, 15],
      [-28, -9, 12],
      [-27, -9, 12]
    ],
    [
      [-27, -9, 12],
      [-28, -9, 12],
      [-29, -9, 8]
    ],
    [
      [-27, -9, 12],
      [-29, -9, 8],
      [-28, -9, 8]
    ],
    //-----------------------------
    [
      [-25, -6, -16],
      [-25, -9, -16],
      [-26, -9, -15]
    ],
    [
      [-25, -6, -16],
      [-26, -9, -15],
      [-26, -6, -15]
    ],
    [
      [-26, -6, -15],
      [-26, -9, -15],
      [-27, -9, -12]
    ],
    [
      [-26, -6, -15],
      [-27, -9, -12],
      [-27, -6, -12]
    ],
    [
      [-27, -6, -12],
      [-27, -9, -12],
      [-28, -9, -8]
    ],
    [
      [-27, -6, -12],
      [-28, -9, -8],
      [-28, -6, -8]
    ],
    [
      [-28, -6, -8],
      [-28, -7, -8],
      [-28, -7, -7]
    ],
    [
      [-25, -9, -16],
      [-26, -9, -16],
      [-27, -9, -15]
    ],
    [
      [-25, -9, -16],
      [-27, -9, -15],
      [-26, -9, -15]
    ],
    [
      [-26, -9, -15],
      [-27, -9, -15],
      [-28, -9, -12]
    ],
    [
      [-26, -9, -15],
      [-28, -9, -12],
      [-27, -9, -12]
    ],
    [
      [-27, -9, -12],
      [-28, -9, -12],
      [-29, -9, -8]
    ],
    [
      [-27, -9, -12],
      [-29, -9, -8],
      [-28, -9, -8]
    ],
    //-----------------------------
    [
      [-28, -7, 8],
      [-28, -9, 8],
      [-28, -9, -8]
    ],
    [
      [-28, -7, 8],
      [-28, -9, -8],
      [-28, -7, -8]
    ],
    [
      [-28, -9, 8],
      [-29, -9, 8],
      [-29, -9, -8]
    ],
    [
      [-28, -9, 8],
      [-29, -9, -8],
      [-28, -9, -8]
    ]
  ];

  static const List<List<List<double>>> frontLights = [
    [
      [-24, -1, 16],
      [-26, -3, 16],
      [-27, -3, 15]
    ],
    [
      [-24, -1, 16],
      [-27, -3, 15],
      [-25, -1, 15]
    ],
    [
      [-25, -1, 15],
      [-27, -3, 15],
      [-28, -3, 12]
    ],
    [
      [-25, -1, 15],
      [-28, -3, 12],
      [-26, -1, 12]
    ],
    [
      [-26, -1, 12],
      [-28, -3, 12],
      [-29, -3, 9]
    ],
    [
      [-26, -1, 12],
      [-29, -3, 9],
      [-28, -2, 8]
    ],
    // ---------------------------
    [
      [-24, -1, -16],
      [-26, -3, -16],
      [-27, -3, -15]
    ],
    [
      [-24, -1, -16],
      [-27, -3, -15],
      [-25, -1, -15]
    ],
    [
      [-25, -1, -15],
      [-27, -3, -15],
      [-28, -3, -12]
    ],
    [
      [-25, -1, -15],
      [-28, -3, -12],
      [-26, -1, -12]
    ],
    [
      [-26, -1, -12],
      [-28, -3, -12],
      [-29, -3, -9]
    ],
    [
      [-26, -1, -12],
      [-29, -3, -9],
      [-28, -2, -8]
    ]
  ];

  static const List<List<List<double>>> hood = [
    [
      [-28, -2, -8],
      [-28, -2, 8],
      [-27, -1, 10]
    ],
    [
      [-28, -2, -8],
      [-27, -1, 10],
      [-27, -1, -10]
    ],
    [
      [-27, -1, 10],
      [-24, 1, 13],
      [-27, -1, -10]
    ],
    [
      [-24, 1, 13],
      [-27, -1, -10],
      [-24, 1, -13]
    ],
    [
      [-24, 1, 13],
      [-20, 2, 13],
      [-24, 1, -13]
    ],
    [
      [-20, 2, 13],
      [-24, 1, -13],
      [-20, 2, -13]
    ],
    [
      [-20, 2, 13],
      [-16, 2, 13],
      [-20, 2, -13]
    ],
    [
      [-16, 2, 13],
      [-20, 2, -13],
      [-16, 2, -13]
    ]
  ];

  static const List<List<List<double>>> windows = [
    [
      [-11, 2, 13],
      [2, 2, 13],
      [-9, 4, 12.3]
    ],
    [
      [2, 2, 13],
      [-9, 4, 12.3],
      [3, 5, 12]
    ],
    [
      [-9, 4, 12.3],
      [3, 5, 12],
      [-4, 7, 11.3]
    ],
    [
      [3, 5, 12],
      [-4, 7, 11.3],
      [4, 9, 10.5]
    ],
    [
      [-4, 7, 11.3],
      [4, 9, 10.5],
      [-2, 8, 11]
    ],
    [
      [4, 9, 10.5],
      [-2, 8, 11],
      [1, 9, 10.5]
    ],
    [
      [17, 5, 12],
      [15, 4, 13],
      [14, 7, 11.3]
    ],
    [
      [15, 4, 13],
      [14, 7, 11.3],
      [8, 2, 13]
    ],
    [
      [14, 7, 11.3],
      [8, 2, 13],
      [8, 9, 10.5]
    ],
    [
      [8, 2, 13],
      [8, 9, 10.5],
      [3, 2, 13]
    ],
    [
      [8, 9, 10.5],
      [3, 2, 13],
      [4, 5, 12]
    ],
    [
      [8, 9, 10.5],
      [4, 5, 12],
      [5, 9, 10.5]
    ],
    //-------------------------
    [
      [-11, 2, -13],
      [2, 2, -13],
      [-9, 4, -12.3]
    ],
    [
      [2, 2, -13],
      [-9, 4, -12.3],
      [3, 5, -12]
    ],
    [
      [-9, 4, -12.3],
      [3, 5, -12],
      [-4, 7, -11.3]
    ],
    [
      [3, 5, -12],
      [-4, 7, -11.3],
      [4, 9, -10.5]
    ],
    [
      [-4, 7, -11.3],
      [4, 9, -10.5],
      [-2, 8, -11]
    ],
    [
      [4, 9, -10.5],
      [-2, 8, -11],
      [1, 9, -10.5]
    ],
    [
      [17, 5, -12],
      [15, 4, -13],
      [14, 7, -11.3]
    ],
    [
      [15, 4, -13],
      [14, 7, -11.3],
      [8, 2, -13]
    ],
    [
      [14, 7, -11.3],
      [8, 2, -13],
      [8, 9, -10.5]
    ],
    [
      [8, 2, -13],
      [8, 9, -10.5],
      [3, 2, -13]
    ],
    [
      [8, 9, -10.5],
      [3, 2, -13],
      [4, 5, -12]
    ],
    [
      [8, 9, -10.5],
      [4, 5, -12],
      [5, 9, -10.5]
    ],
    //-------------------------
    [
      [-16, 2, 13],
      [-13, 3, 12.6],
      [-16, 2, -13]
    ],
    [
      [-13, 3, 12.6],
      [-16, 2, -13],
      [-13, 3, -12.6]
    ],
    [
      [-13, 3, 12.6],
      [-11, 4, 12.3],
      [-13, 3, -12.6]
    ],
    [
      [-11, 4, 12.3],
      [-13, 3, -12.6],
      [-11, 4, -12.3]
    ],
    [
      [-11, 4, 12.3],
      [-5, 8, 11],
      [-11, 4, -12.3]
    ],
    [
      [-5, 8, 11],
      [-11, 4, -12.3],
      [-5, 8, -11]
    ],
    [
      [-5, 8, 11],
      [-3, 9, 10.5],
      [-5, 8, -11]
    ],
    [
      [-3, 9, 10.5],
      [-5, 8, -11],
      [-3, 9, -10.5]
    ],
    [
      [-3, 9, 10.5],
      [1, 10, 10],
      [-3, 9, -10.5]
    ],
    [
      [1, 10, 10],
      [-3, 9, -10.5],
      [1, 10, -10]
    ],
    [
      [1, 10, 10],
      [1, 10, -10],
      [8, 10, 10]
    ],
    [
      [1, 10, -10],
      [8, 10, 10],
      [8, 10, -10]
    ],
    [
      [8, 10, 10],
      [8, 10, -10],
      [12, 9, 10.5]
    ],
    [
      [8, 10, -10],
      [12, 9, 10.5],
      [12, 9, -10.5]
    ],
    [
      [12, 9, 10.5],
      [12, 9, -10.5],
      [15, 8, 11]
    ],
    [
      [12, 9, -10.5],
      [15, 8, 11],
      [15, 8, -11]
    ],
    [
      [15, 8, 11],
      [15, 8, -11],
      [18, 7, 11.3]
    ],
    [
      [15, 8, -11],
      [18, 7, 11.3],
      [18, 7, -11.3]
    ],
    [
      [18, 7, 11.3],
      [18, 7, -11.3],
      [21, 6, 11.6]
    ],
    [
      [18, 7, -11.3],
      [21, 6, 11.6],
      [21, 6, -11.6]
    ],
    [
      [21, 6, 11.6],
      [21, 6, -11.6],
      [23, 5, 12]
    ],
    [
      [21, 6, -11.6],
      [23, 5, 12],
      [23, 5, -12]
    ],
    //-----------------
    [
      [-8, 2, 13],
      [-8, 4, 13],
      [-8, 2, 16]
    ],
    [
      [-8, 4, 13],
      [-8, 2, 16],
      [-8, 4, 16]
    ],
    [
      [-8, 2, -13],
      [-8, 4, -13],
      [-8, 2, -16]
    ],
    [
      [-8, 4, -13],
      [-8, 2, -16],
      [-8, 4, -16]
    ],
  ];

  static const List<List<List<double>>> back = [
    [
      [23, -10, 16],
      [25, -9, 16],
      [24, -10, 15]
    ],
    [
      [25, -9, 16],
      [24, -10, 15],
      [26, -9, 15]
    ],
    [
      [24, -10, 15],
      [26, -9, 15],
      [25, -10, 12]
    ],
    [
      [26, -9, 15],
      [25, -10, 12],
      [27, -9, 12]
    ],
    [
      [25, -10, 12],
      [27, -9, 12],
      [26, -10, 8]
    ],
    [
      [27, -9, 12],
      [26, -10, 8],
      [28, -9, 8]
    ],
    [
      [25, -9, 16],
      [26, -8, 16],
      [26, -9, 15]
    ],
    [
      [26, -8, 16],
      [26, -9, 15],
      [27, -8, 15]
    ],
    [
      [26, -9, 15],
      [27, -8, 15],
      [27, -9, 12]
    ],
    [
      [27, -8, 15],
      [27, -9, 12],
      [28, -8, 12]
    ],
    [
      [27, -9, 12],
      [28, -8, 12],
      [28, -9, 8]
    ],
    [
      [28, -8, 12],
      [28, -9, 8],
      [29, -8, 8]
    ],
    [
      [26, -4, 16],
      [26, -8, 16],
      [27, -8, 15]
    ],
    [
      [26, -4, 16],
      [27, -8, 15],
      [27, -4, 15]
    ],
    [
      [27, -4, 15],
      [27, -8, 15],
      [28, -8, 12]
    ],
    [
      [27, -4, 15],
      [28, -8, 12],
      [28, -4, 12]
    ],
    [
      [28, -4, 12],
      [28, -8, 12],
      [29, -8, 8]
    ],
    [
      [28, -4, 12],
      [29, -8, 8],
      [29, -4, 8]
    ],
    [
      [25, -2, 16],
      [26, -4, 16],
      [26, -2, 15]
    ],
    [
      [26, -4, 16],
      [26, -2, 15],
      [27, -4, 15]
    ],
    [
      [26, -2, 15],
      [27, -4, 15],
      [27, -2, 12]
    ],
    [
      [27, -4, 15],
      [27, -2, 12],
      [28, -4, 12]
    ],
    [
      [27, -2, 12],
      [28, -4, 12],
      [28, -2, 8]
    ],
    [
      [28, -4, 12],
      [28, -2, 8],
      [29, -4, 8]
    ],
    [
      [25, -2, 16],
      [25, 1, 16],
      [26, -2, 15]
    ],
    [
      [25, 1, 16],
      [26, -2, 15],
      [26, 0.6, 15]
    ],
    [
      [26, -2, 15],
      [26, 0.6, 15],
      [27, -2, 12]
    ],
    [
      [26, 0.6, 15],
      [27, -2, 12],
      [27, 0.3, 12]
    ],
    [
      [27, -2, 12],
      [27, 0.3, 12],
      [28, -2, 8]
    ],
    [
      [27, 0.3, 12],
      [28, -2, 8],
      [28, 0, 8]
    ],
    [
      [25, 2, 16],
      [25, 4, 12.3],
      [26, 2, 15]
    ],
    [
      [25, 4, 12.3],
      [26, 2, 15],
      [27, 2, 12]
    ],
    [
      [25, 4, 12.3],
      [27, 2, 12],
      [26, 4, 8]
    ],
    [
      [27, 2, 12],
      [26, 4, 8],
      [28, 2, 8]
    ],
    [
      [26, 4, 8],
      [28, 2, 8],
      [28, 4, 4]
    ],
    [
      [28, 2, 8],
      [28, 4, 4],
      [28, 2, 4]
    ],
    [
      [25, 1, 16],
      [26, 2, 15],
      [25, 2, 16]
    ],
    [
      [25, 4, 12.3],
      [25, 4, 8],
      [26, 4, 8]
    ],
    //----------------------
    [
      [23, -10, -16],
      [25, -9, -16],
      [24, -10, -15]
    ],
    [
      [25, -9, -16],
      [24, -10, -15],
      [26, -9, -15]
    ],
    [
      [24, -10, -15],
      [26, -9, -15],
      [25, -10, -12]
    ],
    [
      [26, -9, -15],
      [25, -10, -12],
      [27, -9, -12]
    ],
    [
      [25, -10, -12],
      [27, -9, -12],
      [26, -10, -8]
    ],
    [
      [27, -9, -12],
      [26, -10, -8],
      [28, -9, -8]
    ],
    [
      [25, -9, -16],
      [26, -8, -16],
      [26, -9, -15]
    ],
    [
      [26, -8, -16],
      [26, -9, -15],
      [27, -8, -15]
    ],
    [
      [26, -9, -15],
      [27, -8, -15],
      [27, -9, -12]
    ],
    [
      [27, -8, -15],
      [27, -9, -12],
      [28, -8, -12]
    ],
    [
      [27, -9, -12],
      [28, -8, -12],
      [28, -9, -8]
    ],
    [
      [28, -8, -12],
      [28, -9, -8],
      [29, -8, -8]
    ],
    [
      [26, -4, -16],
      [26, -8, -16],
      [27, -8, -15]
    ],
    [
      [26, -4, -16],
      [27, -8, -15],
      [27, -4, -15]
    ],
    [
      [27, -4, -15],
      [27, -8, -15],
      [28, -8, -12]
    ],
    [
      [27, -4, -15],
      [28, -8, -12],
      [28, -4, -12]
    ],
    [
      [28, -4, -12],
      [28, -8, -12],
      [29, -8, -8]
    ],
    [
      [28, -4, -12],
      [29, -8, -8],
      [29, -4, -8]
    ],
    [
      [25, -2, -16],
      [26, -4, -16],
      [26, -2, -15]
    ],
    [
      [26, -4, -16],
      [26, -2, -15],
      [27, -4, -15]
    ],
    [
      [26, -2, -15],
      [27, -4, -15],
      [27, -2, -12]
    ],
    [
      [27, -4, -15],
      [27, -2, -12],
      [28, -4, -12]
    ],
    [
      [27, -2, -12],
      [28, -4, -12],
      [28, -2, -8]
    ],
    [
      [28, -4, -12],
      [28, -2, -8],
      [29, -4, -8]
    ],
    [
      [25, -2, -16],
      [25, 1, -16],
      [26, -2, -15]
    ],
    [
      [25, 1, -16],
      [26, -2, -15],
      [26, 0.6, -15]
    ],
    [
      [26, -2, -15],
      [26, 0.6, -15],
      [27, -2, -12]
    ],
    [
      [26, 0.6, -15],
      [27, -2, -12],
      [27, 0.3, -12]
    ],
    [
      [27, -2, -12],
      [27, 0.3, -12],
      [28, -2, -8]
    ],
    [
      [27, 0.3, -12],
      [28, -2, -8],
      [28, 0, -8]
    ],
    [
      [25, 2, -16],
      [25, 4, -12.3],
      [26, 2, -15]
    ],
    [
      [25, 4, -12.3],
      [26, 2, -15],
      [27, 2, -12]
    ],
    [
      [25, 4, -12.3],
      [27, 2, -12],
      [26, 4, -8]
    ],
    [
      [27, 2, -12],
      [26, 4, -8],
      [28, 2, -8]
    ],
    [
      [26, 4, -8],
      [28, 2, -8],
      [28, 4, -4]
    ],
    [
      [28, 2, -8],
      [28, 4, -4],
      [28, 2, -4]
    ],
    [
      [25, 1, -16],
      [26, 2, -15],
      [25, 2, -16]
    ],
    [
      [25, 4, -12.3],
      [25, 4, -8],
      [26, 4, -8]
    ],
    //----------------------
    [
      [28, -9, 8],
      [26, -10, 8],
      [26, -10, -8]
    ],
    [
      [28, -9, 8],
      [26, -10, -8],
      [28, -9, -8]
    ],
    [
      [29, -8, 8],
      [28, -9, 8],
      [28, -9, -8]
    ],
    [
      [29, -8, 8],
      [28, -9, -8],
      [29, -8, -8]
    ],
    [
      [29, -4, 8],
      [29, -8, 8],
      [29, -8, -8]
    ],
    [
      [29, -4, 8],
      [29, -8, -8],
      [29, -4, -8]
    ],
    [
      [28, -2, 8],
      [29, -4, 8],
      [29, -4, -8]
    ],
    [
      [28, -2, 8],
      [29, -4, -8],
      [28, -2, -8]
    ],
    [
      [28, 2, 8],
      [28, -2, 8],
      [28, -2, -8]
    ],
    [
      [28, 2, 8],
      [28, -2, -8],
      [28, 2, -8]
    ],
    [
      [28, 4, 4],
      [28, 2, 4],
      [28, 4, -4]
    ],
    [
      [28, 2, 4],
      [28, 4, -4],
      [28, 2, -4]
    ],
    [
      [23, 5, 12],
      [23, 5, -12],
      [25, 4, 12.3]
    ],
    [
      [23, 5, -12],
      [25, 4, 12.3],
      [25, 4, -12.3]
    ],
    [
      [25, 4, 8],
      [26, 4, 8],
      [25, 4, -8]
    ],
    [
      [26, 4, 8],
      [25, 4, -8],
      [26, 4, -8]
    ],
    [
      [26, 4, 8],
      [26, 4, -8],
      [28, 4, 4]
    ],
    [
      [26, 4, -8],
      [28, 4, 4],
      [28, 4, -4]
    ],
  ];

  static const List<List<List<double>>> backLights = [
    [
      [25, 1, 16],
      [26, 2, 15],
      [26, 0.6, 15]
    ],
    [
      [26, 2, 15],
      [26, 0.6, 15],
      [27, 2, 12]
    ],
    [
      [26, 0.6, 15],
      [27, 2, 12],
      [27, 0.3, 12]
    ],
    [
      [27, 2, 12],
      [27, 0.3, 12],
      [28, 2, 8]
    ],
    [
      [27, 0.3, 12],
      [28, 2, 8],
      [28, 0, 8]
    ],
    //---------------------
    [
      [25, 1, -16],
      [26, 2, -15],
      [26, 0.6, -15]
    ],
    [
      [26, 2, -15],
      [26, 0.6, -15],
      [27, 2, -12]
    ],
    [
      [26, 0.6, -15],
      [27, 2, -12],
      [27, 0.3, -12]
    ],
    [
      [27, 2, -12],
      [27, 0.3, -12],
      [28, 2, -8]
    ],
    [
      [27, 0.3, -12],
      [28, 2, -8],
      [28, 0, -8]
    ],
  ];

  static const List<List<List<double>>> elementOnCar = [
    [
      [-13, 0, 16],
      [-16, 0, 16],
      [-15, -1, 16]
    ],
    [
      [-13, 0, -16],
      [-16, 0, -16],
      [-15, -1, -16]
    ]
  ];

  static const List<List<List<double>>> mirrors = [
    [
      [-10, 2, 13],
      [-10, 3, 13],
      [-8, 2, 13]
    ],
    [
      [-10, 3, 13],
      [-8, 2, 13],
      [-9, 4, 13]
    ],
    [
      [-8, 2, 13],
      [-9, 4, 13],
      [-8, 4, 13]
    ],
    [
      [-8, 2, 16],
      [-8, 4, 16],
      [-9, 4, 16]
    ],
    [
      [-9, 4, 16],
      [-8, 2, 16],
      [-10, 3, 16]
    ],
    [
      [-8, 2, 16],
      [-10, 2, 16],
      [-10, 3, 16]
    ],
    [
      [-10, 2, 16],
      [-10, 3, 16],
      [-10, 2, 13]
    ],
    [
      [-10, 3, 16],
      [-10, 2, 13],
      [-10, 3, 13]
    ],
    [
      [-10, 3, 16],
      [-10, 3, 13],
      [-9, 4, 16]
    ],
    [
      [-10, 3, 13],
      [-9, 4, 16],
      [-9, 4, 13]
    ],
    [
      [-9, 4, 16],
      [-9, 4, 13],
      [-8, 4, 16]
    ],
    [
      [-9, 4, 13],
      [-8, 4, 16],
      [-8, 4, 13]
    ],
    [
      [-10, 2, 16],
      [-10, 2, 13],
      [-8, 2, 16]
    ],
    [
      [-10, 2, 13],
      [-8, 2, 16],
      [-8, 2, 13]
    ],
    //---------------------
    [
      [-10, 2, -13],
      [-10, 3, -13],
      [-8, 2, -13]
    ],
    [
      [-10, 3, -13],
      [-8, 2, -13],
      [-9, 4, -13]
    ],
    [
      [-8, 2, -13],
      [-9, 4, -13],
      [-8, 4, -13]
    ],
    [
      [-8, 2, -16],
      [-8, 4, -16],
      [-9, 4, -16]
    ],
    [
      [-9, 4, -16],
      [-8, 2, -16],
      [-10, 3, -16]
    ],
    [
      [-8, 2, -16],
      [-10, 2, -16],
      [-10, 3, -16]
    ],
    [
      [-10, 2, -16],
      [-10, 3, -16],
      [-10, 2, -13]
    ],
    [
      [-10, 3, -16],
      [-10, 2, -13],
      [-10, 3, -13]
    ],
    [
      [-10, 3, -16],
      [-10, 3, -13],
      [-9, 4, -16]
    ],
    [
      [-10, 3, -13],
      [-9, 4, -16],
      [-9, 4, -13]
    ],
    [
      [-9, 4, -16],
      [-9, 4, -13],
      [-8, 4, -16]
    ],
    [
      [-9, 4, -13],
      [-8, 4, -16],
      [-8, 4, -13]
    ],
    [
      [-10, 2, -16],
      [-10, 2, -13],
      [-8, 2, -16]
    ],
    [
      [-10, 2, -13],
      [-8, 2, -16],
      [-8, 2, -13]
    ]
  ];

  static const List<List<List<double>>> bottom = [
    [
      [-23, -10, 16],
      [-23, -10, -16],
      [-25, -10, 16],
    ],
    [
      [-23, -10, -16],
      [-25, -10, 16],
      [-25, -10, -16]
    ],
    [
      [-25, -10, 16],
      [-25, -10, -16],
      [-26, -10, 15]
    ],
    [
      [-25, -10, -16],
      [-26, -10, 15],
      [-26, -10, -15]
    ],
    [
      [-26, -10, 15],
      [-26, -10, -15],
      [-27, -10, 12]
    ],
    [
      [-26, -10, -15],
      [-27, -10, 12],
      [-27, -10, -12]
    ],
    [
      [-27, -10, 12],
      [-27, -10, -12],
      [-28, -10, 8]
    ],
    [
      [-27, -10, -12],
      [-28, -10, 8],
      [-28, -10, -8]
    ],
    [
      [-23, -10, 12],
      [-23, -10, -12],
      [-15, -10, 12]
    ],
    [
      [-23, -10, -12],
      [-15, -10, 12],
      [-15, -10, -12]
    ],
    [
      [-15, -10, 16],
      [-15, -10, -16],
      [13, -10, 16]
    ],
    [
      [-15, -10, -16],
      [13, -10, 16],
      [13, -10, -16]
    ],
    [
      [13, -10, 12],
      [13, -10, -12],
      [21, -10, 12]
    ],
    [
      [13, -10, -12],
      [21, -10, 12],
      [21, -10, -12]
    ],
    [
      [21, -10, 16],
      [21, -10, -16],
      [23, -10, 16]
    ],
    [
      [21, -10, -16],
      [23, -10, 16],
      [23, -10, -16]
    ],
    [
      [23, -10, 16],
      [23, -10, -16],
      [24, -10, 15]
    ],
    [
      [23, -10, -16],
      [24, -10, 15],
      [24, -10, -15]
    ],
    [
      [24, -10, 15],
      [24, -10, -15],
      [25, -10, 12]
    ],
    [
      [24, -10, -15],
      [25, -10, 12],
      [25, -10, -12]
    ],
    [
      [25, -10, 12],
      [25, -10, -12],
      [26, -10, 8]
    ],
    [
      [25, -10, -12],
      [26, -10, 8],
      [26, -10, -8]
    ],
    //-----------------
    [
      [-23, -10, 16],
      [-23, -10, 12],
      [-23, -8, 16]
    ],
    [
      [-23, -10, 12],
      [-23, -8, 16],
      [-23, -8, 12]
    ],
    [
      [-15, -10, 16],
      [-15, -10, 12],
      [-15, -8, 16]
    ],
    [
      [-15, -10, 12],
      [-15, -8, 16],
      [-15, -8, 12]
    ],
    [
      [13, -10, 16],
      [13, -10, 12],
      [13, -8, 16]
    ],
    [
      [13, -10, 12],
      [13, -8, 16],
      [13, -8, 12]
    ],
    [
      [21, -10, 16],
      [21, -10, 12],
      [21, -8, 16]
    ],
    [
      [21, -10, 12],
      [21, -8, 16],
      [21, -8, 12]
    ],
    [
      [-23, -10, 12],
      [-22, -10, 12],
      [-23, -8, 12]
    ],
    [
      [-16, -10, 12],
      [-15, -10, 12],
      [-15, -8, 12]
    ],
    [
      [13, -10, 12],
      [14, -10, 12],
      [13, -8, 12]
    ],
    [
      [21, -10, 12],
      [20, -10, 12],
      [21, -8, 12]
    ],
    //---------------------
    [
      [-23, -10, -16],
      [-23, -10, -12],
      [-23, -8, -16]
    ],
    [
      [-23, -10, -12],
      [-23, -8, -16],
      [-23, -8, -12]
    ],
    [
      [-15, -10, -16],
      [-15, -10, -12],
      [-15, -8, -16]
    ],
    [
      [-15, -10, -12],
      [-15, -8, -16],
      [-15, -8, -12]
    ],
    [
      [13, -10, -16],
      [13, -10, -12],
      [13, -8, -16]
    ],
    [
      [13, -10, -12],
      [13, -8, -16],
      [13, -8, -12]
    ],
    [
      [21, -10, -16],
      [21, -10, -12],
      [21, -8, -16]
    ],
    [
      [21, -10, -12],
      [21, -8, -16],
      [21, -8, -12]
    ],
    [
      [-23, -10, -12],
      [-22, -10, -12],
      [-23, -8, -12]
    ],
    [
      [-16, -10, -12],
      [-15, -10, -12],
      [-15, -8, -12]
    ],
    [
      [13, -10, -12],
      [14, -10, -12],
      [13, -8, -12]
    ],
    [
      [21, -10, -12],
      [20, -10, -12],
      [21, -8, -12]
    ]
  ];

  static List<List<List<double>>> borders() {
    List<List<List<double>>> result = [];
    List<List<double>> lines = [
      [-23, -10, 16],
      [-25, -10, 16],
      [-26, -9, 16],
      [-25, -9, 16],
      [-25, -6, 16],
      [-26, -5, 16],
      [-26, -3, 16],
      [-24, -1, 16],
      [-22, 0, 16],
      [8, 0, 16],
      [16, 2, 16],
      [25, 2, 16],
      [25, -2, 16],
      [26, -4, 16],
      [26, -8, 16],
      [25, -9, 16],
      [23, -10, 16],
      [21, -10, 16],
      [21, -6, 16],
      [20, -4, 16],
      [18, -3, 16],
      [16, -3, 16],
      [14, -4, 16],
      [13, -6, 16],
      [13, -10, 16],
      [-15, -10, 16],
      [-15, -6, 16],
      [-16, -4, 16],
      [-18, -3, 16],
      [-20, -3, 16],
      [-22, -4, 16],
      [-23, -6, 16],
      [-23, -10, 16]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-24, -1, 16],
      [-25, -1, 15],
      [-26, -1, 12],
      [-28, -2, 8],
      [-29, -3, 9],
      [-28, -3, 12],
      [-27, -3, 15],
      [-26, -3, 16]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [25, 1, 16],
      [26, 2, 15],
      [27, 2, 12],
      [28, 2, 8],
      [28, 0, 8],
      [27, 0.3, 12],
      [26, 0.6, 15],
      [25, 1, 16],
    ];
    fillArrayForLines(result, lines);
    lines = [
      [1, -9, 16],
      [1, 0, 16],
      [2, 2, 13],
      [-11, 2, 13],
      [-12, 0, 16],
      [-12, -5, 16],
      [-11, -9, 16],
      [9, -9, 16],
      [16, 2, 16],
      [17, 5, 12],
      [15, 4, 13],
      [8, 2, 13],
      [2, 2, 13],
      [3, 5, 12],
      [4, 9, 10.5],
      [1, 9, 10.5],
      [-2, 8, 11],
      [-4, 7, 11.3],
      [-9, 4, 12.3],
      [-11, 2, 13],
      [3, 2, 13],
      [4, 5, 12],
      [5, 9, 10.5],
      [8, 9, 10.5],
      [14, 7, 11.3],
      [17, 5, 12]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-28, -2, 0],
      [-28, -2, 8],
      [-27, -1, 10],
      [-24, 1, 13],
      [-20, 2, 13],
      [-16, 2, 13],
      [-16, 2, 0],
      [-16, 2, 13],
      [-13, 3, 12.6],
      [-11, 4, 12.3],
      [-5, 8, 11],
      [-3, 9, 10.5],
      [1, 10, 10],
      [8, 10, 10],
      [12, 9, 10.5],
      [15, 8, 11],
      [18, 7, 11.3],
      [21, 6, 11.6],
      [23, 5, 12],
      [23, 5, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-29, -3, 9],
      [-29, -3, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-26, -5, 16],
      [-27, -5, 15],
      [-28, -5, 12],
      [-29, -5, 8],
      [-29, -5, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-25, -6, 16],
      [-26, -6, 15],
      [-27, -6, 12],
      [-28, -6, 8],
      [-28, -6, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-26, -9, 16],
      [-27, -9, 15],
      [-28, -9, 12],
      [-29, -9, 8],
      [-29, -9, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-25, -10, 16],
      [-26, -10, 15],
      [-27, -10, 12],
      [-28, -10, 8],
      [-28, -10, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [23, -10, 16],
      [24, -10, 15],
      [25, -10, 12],
      [26, -10, 8],
      [26, -10, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [25, -9, 16],
      [26, -9, 15],
      [27, -9, 12],
      [28, -9, 8],
      [28, -9, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [26, -8, 16],
      [27, -8, 15],
      [28, -8, 12],
      [29, -8, 8],
      [29, -8, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [26, -4, 16],
      [27, -4, 15],
      [28, -4, 12],
      [29, -4, 8],
      [29, -4, 0]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [25, -2, 16],
      [26, -2, 15],
      [27, -2, 12],
      [28, -2, 8],
      [28, -2, 0]
    ];
    fillArrayForLines(result, lines);
    // lines = [
    //   [28, 2, 0],
    //   [28, 2, 8],
    //   [28, 0, 8],
    //   [28, 0, 0]
    // ];
    // fillArrayForLines(result, lines);
    lines = [
      [28, 2, 8],
      [28, 4, 4],
      [28, 4, 0],
      [28, 4, 4],
      [26, 4, 8],
      [25, 4, 12.3],
      [23, 5, 12],
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-13, 0, 16],
      [-16, 0, 16],
      [-15, -1, 16],
      [-13, 0, 16]
    ];
    fillArrayForLines(result, lines);
    lines = [
      [-10, 2, 13],
      [-10, 3, 13],
      [-9, 4, 13],
      [-8, 4, 13],
      [-8, 4, 16],
      [-8, 2, 16],
      [-8, 2, 13],
      [-8, 2, 16],
      [-10, 2, 16],
      [-10, 2, 13],
      [-10, 2, 16],
      [-10, 3, 16],
      [-10, 3, 13],
      [-10, 3, 16],
      [-9, 4, 16],
      [-9, 4, 13],
      [-9, 4, 16],
      [-8, 4, 16]
    ];
    fillArrayForLines(result, lines);

    return result;
  }

  static void fillArrayForLines(
      List<List<List<double>>> result, List<List<double>> lines) {
    for (int i = 0; i < lines.length - 1; i++) {
      result.add([
        [lines[i][0], lines[i][1], lines[i][2]],
        [lines[i + 1][0], lines[i + 1][1], lines[i + 1][2]],
        [lines[i][0], lines[i][1], lines[i][2]],
      ]);
      result.add([
        [lines[i][0], lines[i][1], lines[i][2] * -1],
        [lines[i + 1][0], lines[i + 1][1], lines[i + 1][2] * -1],
        [lines[i][0], lines[i][1], lines[i][2] * -1],
      ]);
    }
  }
}
